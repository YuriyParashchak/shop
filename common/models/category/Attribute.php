<?php

namespace common\models\category;

use phpDocumentor\Reflection\Types\Null_;
use Yii;
use yii\behaviors\SluggableBehavior;
use yii\helpers\Json;

/**
 * This is the model class for table "attribute".
 *
 * @property int $id
 * @property int $attribute_group_id
 * @property string $title
 * @property string $slug
 * @property string $type
 * @property int $required
 * @property array $variants (DC2Type:json_array)
 * @property int $sort
 *
 * @property AttributeGroup $attributeGroup
 * @property CategoryAttribute[] $categoryAttributes
 * @property Category[] $categories
 * @property AttributeData $attributeData
 * @property AttributeValues[] $attributeValues
 */
class Attribute extends \yii\db\ActiveRecord
{
    public $title_us;

    const TYPE_INTEGER = 'number';
    const TYPE_STRING = 'string';
    const TYPE_BOOLEAN = 'boolean';

    const REQUIRED = 1;
    const OPTIONAL = 2;

    public function behaviors()
    {
        return [
            [
                'class' => SluggableBehavior::class,
                'attribute' => 'title_us',
                'ensureUnique' => true,
            ],
        ];
    }
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'attribute';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['attribute_group_id', 'title', 'slug', 'type', 'required', 'sort'], 'required'],
            [['attribute_group_id', 'required', 'sort'], 'integer'],
            [['variants'], 'safe'],
            [['title_us', 'slug'], 'string', 'max' => 70],
            [['title'], 'string', 'max' => 255],
            [['type'], 'string', 'max' => 50],
            [['attribute_group_id'], 'exist', 'skipOnError' => true, 'targetClass' => AttributeGroup::class, 'targetAttribute' => ['attribute_group_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'attribute_group_id' => Yii::t('menu','Attribute Group'),
            'title' => Yii::t('menu','Title'),
            'slug' => 'Slug',
            'type' => Yii::t('menu','Type'),
            'required' => Yii::t('menu','Required'),
            'variants' => Yii::t('menu','Variants'),
            'sort' => Yii::t('menu','Sort'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAttributeGroup()
    {
        return $this->hasOne(AttributeGroup::class, ['id' => 'attribute_group_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategoryAttributes()
    {
        return $this->hasMany(CategoryAttribute::class, ['attribute_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategories()
    {
        return $this->hasMany(Category::class, ['id' => 'category_id'])->viaTable('category_attribute', ['attribute_id' => 'id']);
    }

    public function load($data, $formName = null)
    {
        return parent::load($data, $formName); // TODO: Change the autogenerated stub
    }

    public function getTitles()
    {
        return Json::decode($this->title);
    }

    public function getTitle($language = null)
    {
        if(!$language)
            $language = Yii::$app->session['language'];
        return Json::decode($this->title)[$language];
    }

    public function setTitle($title_uk, $title_ru)
    {
        $this->title = Json::encode([
            'en' => $this->title_us,
            'uk' => $title_uk,
            'ru' => $title_ru,
        ]);
    }

    public function getAttributeValues()
    {
        return $this->hasMany(AttributeValues::class, ['attribute_id' => 'id']);
    }

    public function getAttributeData()
    {
        return $this->hasOne(AttributeData::class, ['id' => 'attribute_id'])->via('attributeValues');
    }

    public function categoryAttributeIsSet(int $idCategory)
    {
        $categoryAttr = CategoryAttribute::findOne(['category_id' => $idCategory, 'attribute_id' => $this->id]);

        if($categoryAttr)
            return true;
        else
            return false;
    }
}
